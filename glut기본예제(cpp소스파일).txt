#include "glut.h"

void MyDisplay()
{
   glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT); // 버퍼 지우기
   glColor3f(0.0f, 1.0f, 0.0f);

   for (float i = 0.0 ; i < 15 ; i++)
   {
      for (float j = 0.0 ; j < 15 ; j++)
      {
         glRectf(-1.5 + (0.2 * j), 1.5 - (0.2 * i), -1.3 + (0.2 * j), 1.3 - (0.2 * i));
      }
   }
   
   glClear(GL_DEPTH_BUFFER_BIT); // 깊이 버퍼 지우기
   glColor3f(1.0f, 0.0f, 0.0f);
   glRectf(X1, Y1, X2, Y2);
   glClear(GL_DEPTH_BUFFER_BIT); // 깊이 버퍼 지우기
   glColor3f(0.0f, 0.0f, 1.0f);
   glRectf(X3, Y3, X4, Y4);

   glFlush();
}


void changeSize(int w, int h)
{
    //창이 아주 작을 때, 0 으로 나누는 것을 예방합니다.
    if(h == 0)
        h = 1;
    float ratio = 1.0* w / h;

    //좌표계를 수정하기 전에 초기화합니다.
    glMatrixMode(GL_PROJECTION);
    glLoadIdentity();

    //뷰포트를 창의 전체 크기로 설정합니다.
    glViewport(0, 0, w, h);

    //투시값을 설정합니다.
    gluPerspective(45,ratio,1,1000);
    glMatrixMode(GL_MODELVIEW);
    glLoadIdentity();
    gluLookAt(0.0,0.0,5.0, 0.0,0.0,-1.0, 0.0f,1.0f,0.0f);
}

void MySpecial(int key, int x, int y) 
{
   //키보드 방향에 따른 위치이동
   switch (key) {
   case GLUT_KEY_LEFT:
      if (X1 > -1.5)
      {
         X1 -= Move;
         X2 -= Move;
      }
      break;
   case GLUT_KEY_RIGHT:
      if (X2 < 1.5)
      {
         X1 += Move;
         X2 += Move;
      }
      break;
   case GLUT_KEY_UP:
      if (Y1 < 1.5)
      {
         Y1 += Move;
         Y2 += Move;
      }
      break;
   case GLUT_KEY_DOWN:
      if (Y2 > -1.5)
      {
         Y1 -= Move;
         Y2 -= Move;
      }
      break;
   }
   glutPostRedisplay();
}

void MyKeyboard(unsigned char key, int x, int y)
{
   switch (key)
   {
   case 'a':
      if (X3 > -1.5)
      {
         X3 -= Move;
         X4 -= Move;
      }
      break;
   case 'd':
      if (X4 < 1.5)
      {
         X3 += Move;
         X4 += Move;
      }
      break;
   case 'w':
      if (Y3 < 1.5)
      {
         Y3 += Move;
         Y4 += Move;
      }
      break;
   case 's':
      if (Y4 > -1.5)
      {
         Y3 -= Move;
         Y4 -= Move;
      }
      break;
   }
   glutPostRedisplay();
}



int main(int argc, char** argv)
{
   glutInit(&argc, argv);

   //glutInitDisplayMode(GLUT_DEPTH | GLUT_DOUBLE | GLUT_RGBA); // 이중버퍼를 설정한다.

   glutInitWindowPosition(500, 100); // 실행되는 시작 위치
   glutInitWindowSize(1000, 800);     // 생성되는 윈도우 크기
   glutCreateWindow("OpenGL Drawing Example"); // 태명; 설정한 이름으로 윈도우를 생성함
   glutDisplayFunc(MyDisplay);
   //glutIdleFunc(MyDisplay); // 휴면(idle)시간에 호출될 함수를 설정한다.
   glutReshapeFunc(changeSize); // 창의 크기가 변해도 비율은 변하지 않게 해준다.

   glutSpecialFunc(MySpecial); // 키보드 특수키 입력 처리
   glutKeyboardFunc(MyKeyboard); // 키보드 일반키 입력 처리

   glEnable(GL_DEPTH_TEST); // 깊이 검사가 가능하도록 설정한다.
   glutMainLoop();

   return 0;
}